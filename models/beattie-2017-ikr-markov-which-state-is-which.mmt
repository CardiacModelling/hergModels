[[model]]
name: Beattie-2017-IKr
author: Michael Clerx
desc: Kylie's model as imported from the Mex file
# Initial values
ikr.y1 = 0
ikr.y2 = 0
ikr.y3 = 0

#
# Simulation engine variables
#
[engine]
time = 0 bind time
pace = 0 bind pace

#
# Membrane potential
#
[membrane]
V = engine.pace
    desc: membane potential
    in [mV]

[nernst]
EK = -85 [mV]

#
# Model from Kylie's mex file (HH)
#
[ikr]
use membrane.V
IKr = p9 * y3 * (V - nernst.EK)
y4 = 1 - y1 - y2 - y3
k12 = p1 * exp( p2 * V)
k21 = p3 * exp(-p4 * V)
k41 = p5 * exp( p6 * V)
k14 = p7 * exp(-p8 * V)
dot(y1) = -k12 * y1 + k21 * y2 + k41 * y4 - k14 * y1
dot(y2) = -k14 * y2 + k41 * y3 + k12 * y1 - k21 * y2
dot(y3) = -k21 * y3 + k12 * y4 + k14 * y2 - k41 * y3
r12 = y1 * k12
r21 = y2 * k21
r23 = y2 * k14
r32 = y3 * k41
r34 = y3 * k21
r43 = y4 * k12
r41 = y4 * k41
r14 = y1 * k14

p1 = 2.26e-4 [1/ms]
p2 = 0.06990 [1/mV]
p3 = 3.45e-5 [1/ms]
p4 = 0.05462 [1/mV]
p5 = 0.08730 [1/ms]
p6 = 8.91e-3 [1/mV]
p7 = 5.15e-3 [1/ms]
p8 = 0.03158 [1/mV]
p9 = 0.15240 [mS/uF]

[[protocol]]
# Level  Start    Length   Period   Multiplier
-85      0        2000     0        0
+20      next     8000     0        0

[[script]]
import myokit
import myokit.pacing as pacing
import numpy as np
import matplotlib
import matplotlib.pyplot as plt

#
# Simple IKr test script
#

# Get model
m = get_model()
p = get_protocol()

# Run simulation
s = myokit.Simulation(m, p)
d = s.run(p.characteristic_time())

d = d.trim_left(2000)

# Plot data as overlapping steps
plt.figure()
plt.subplot(3, 1, 1)
plt.xlabel('Time (ms)')
plt.ylabel('Voltage (mV)')
plt.plot(d.time(), d['membrane.V'])

plt.subplot(3, 1, 2)
plt.xlabel('Time (ms)')
plt.ylabel('IKr (nA)')
plt.plot(d.time(), d['ikr.IKr'])

plt.subplot(3, 1, 3)
plt.xlabel('Time (ms)')
plt.ylabel('Occupancy (-)')
plt.plot(d.time(), d['ikr.y1'], label='y1 (Inactive Closed)')
plt.plot(d.time(), d['ikr.y2'], label='y2 (Inactive Open)')
plt.plot(d.time(), d['ikr.y3'], label='y3 (Active Open)')
plt.plot(d.time(), d['ikr.y4'], label='y4 (Active Close)')
plt.legend()

plt.figure()
plt.subplot(4, 1, 1)
plt.plot(d.time(), d['ikr.r12'], label='r12')
plt.plot(d.time(), d['ikr.r21'], label='r21')
plt.legend()
plt.subplot(4, 1, 2)
plt.plot(d.time(), d['ikr.r23'], label='r23')
plt.plot(d.time(), d['ikr.r32'], label='r32')
plt.legend()
plt.subplot(4, 1, 3)
plt.plot(d.time(), d['ikr.r34'], label='r34')
plt.plot(d.time(), d['ikr.r43'], label='r43')
plt.legend()
plt.subplot(4, 1, 4)
plt.plot(d.time(), d['ikr.r41'], label='r41')
plt.plot(d.time(), d['ikr.r14'], label='r14')
plt.legend()



plt.show()

